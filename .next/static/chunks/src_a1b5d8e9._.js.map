{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/clayc/Desktop/Gordon%20College/3rd%20Year/Project%20Management/sari-sari-store-inventory-management/src/components/ProductModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Fragment } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { Product, ProductFormData } from \"@/types/product\";\r\n\r\ninterface ProductModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (data: ProductFormData) => void;\r\n  product?: Product | null;\r\n  isEditing?: boolean;\r\n}\r\n\r\nexport default function ProductModal({\r\n  isOpen,\r\n  onClose,\r\n  onSubmit,\r\n  product,\r\n  isEditing = false,\r\n}: ProductModalProps) {\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.currentTarget);\r\n\r\n    const productData: ProductFormData = {\r\n      name: formData.get(\"name\") as string,\r\n      supplier: formData.get(\"supplier\") as string,\r\n      price: parseFloat(formData.get(\"price\") as string),\r\n      quantity: parseInt(formData.get(\"quantity\") as string),\r\n    };\r\n\r\n    onSubmit(productData);\r\n  };\r\n\r\n  return (\r\n    <Transition appear show={isOpen} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-10\" onClose={onClose}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black/50\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-xl font-medium leading-6 text-gray-900\"\r\n                >\r\n                  {isEditing ? \"Edit Product\" : \"Add New Product\"}\r\n                </Dialog.Title>\r\n\r\n                <form onSubmit={handleSubmit} className=\"mt-4 space-y-4\">\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"name\"\r\n                      className=\"block text-lg font-medium text-gray-700\"\r\n                    >\r\n                      Product Name\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      required\r\n                      defaultValue={product?.name || \"\"}\r\n                      className=\"mt-1 p-2 block w-full rounded-md border-gray-300 text-md shadow-sm focus:border-green-500 focus:ring-green-500 \"\r\n                      placeholder=\"Enter product name\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"supplier\"\r\n                      className=\"block text-lg font-medium text-gray-700\"\r\n                    >\r\n                      Supplier\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"supplier\"\r\n                      id=\"supplier\"\r\n                      required\r\n                      defaultValue={product?.supplier || \"\"}\r\n                      className=\"mt-1 p-2 block w-full rounded-md border-gray-500 text-md shadow-sm focus:border-green-500 focus:ring-green-500 \"\r\n                      placeholder=\"Enter supplier name or brand\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"price\"\r\n                      className=\"block text-lg font-medium text-gray-700\"\r\n                    >\r\n                      Price (â‚±)\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"price\"\r\n                      id=\"price\"\r\n                      step=\"0.01\"\r\n                      min=\"0\"\r\n                      required\r\n                      defaultValue={product?.price || \"\"}\r\n                      className=\"mt-1 p-2 block w-full rounded-md border-gray-300 shadow-sm text-md focus:border-green-500 focus:ring-green-500\"\r\n                      placeholder=\"0.00\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"quantity\"\r\n                      className=\"block text-lg font-medium text-gray-700\"\r\n                    >\r\n                      Quantity\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"quantity\"\r\n                      id=\"quantity\"\r\n                      min=\"0\"\r\n                      required\r\n                      defaultValue={product?.quantity || \"\"}\r\n                      className=\"mt-1 p-2 block w-full rounded-md border-gray-300 text-md shadow-sm focus:border-green-500 focus:ring-green-500\"\r\n                      placeholder=\"0\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mt-6 flex justify-end space-x-3\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={onClose}\r\n                      className=\"inline-flex justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-md font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"inline-flex justify-center rounded-md border border-transparent bg-green-600 px-4 py-2 text-md font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\r\n                    >\r\n                      {isEditing ? \"Update\" : \"Create\"}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAHA;;;;AAce,SAAS,aAAa,KAMjB;QANiB,EACnC,MAAM,EACN,OAAO,EACP,QAAQ,EACR,OAAO,EACP,YAAY,KAAK,EACC,GANiB;IAOnC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,MAAM,WAAW,IAAI,SAAS,EAAE,aAAa;QAE7C,MAAM,cAA+B;YACnC,MAAM,SAAS,GAAG,CAAC;YACnB,UAAU,SAAS,GAAG,CAAC;YACvB,OAAO,WAAW,SAAS,GAAG,CAAC;YAC/B,UAAU,SAAS,SAAS,GAAG,CAAC;QAClC;QAEA,SAAS;IACX;IAEA,qBACE,6LAAC,wMAAU;QAAC,MAAM;QAAC,MAAM;QAAQ,IAAI,yKAAQ;kBAC3C,cAAA,6LAAC,4LAAM;YAAC,IAAG;YAAM,WAAU;YAAgB,SAAS;;8BAClD,6LAAC,wMAAU,CAAC,KAAK;oBACf,IAAI,yKAAQ;oBACZ,OAAM;oBACN,WAAU;oBACV,SAAQ;oBACR,OAAM;oBACN,WAAU;oBACV,SAAQ;8BAER,cAAA,6LAAC;wBAAI,WAAU;;;;;;;;;;;8BAGjB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,wMAAU,CAAC,KAAK;4BACf,IAAI,yKAAQ;4BACZ,OAAM;4BACN,WAAU;4BACV,SAAQ;4BACR,OAAM;4BACN,WAAU;4BACV,SAAQ;sCAER,cAAA,6LAAC,4LAAM,CAAC,KAAK;gCAAC,WAAU;;kDACtB,6LAAC,4LAAM,CAAC,KAAK;wCACX,IAAG;wCACH,WAAU;kDAET,YAAY,iBAAiB;;;;;;kDAGhC,6LAAC;wCAAK,UAAU;wCAAc,WAAU;;0DACtC,6LAAC;;kEACC,6LAAC;wDACC,SAAQ;wDACR,WAAU;kEACX;;;;;;kEAGD,6LAAC;wDACC,MAAK;wDACL,MAAK;wDACL,IAAG;wDACH,QAAQ;wDACR,cAAc,CAAA,oBAAA,8BAAA,QAAS,IAAI,KAAI;wDAC/B,WAAU;wDACV,aAAY;;;;;;;;;;;;0DAIhB,6LAAC;;kEACC,6LAAC;wDACC,SAAQ;wDACR,WAAU;kEACX;;;;;;kEAGD,6LAAC;wDACC,MAAK;wDACL,MAAK;wDACL,IAAG;wDACH,QAAQ;wDACR,cAAc,CAAA,oBAAA,8BAAA,QAAS,QAAQ,KAAI;wDACnC,WAAU;wDACV,aAAY;;;;;;;;;;;;0DAIhB,6LAAC;;kEACC,6LAAC;wDACC,SAAQ;wDACR,WAAU;kEACX;;;;;;kEAGD,6LAAC;wDACC,MAAK;wDACL,MAAK;wDACL,IAAG;wDACH,MAAK;wDACL,KAAI;wDACJ,QAAQ;wDACR,cAAc,CAAA,oBAAA,8BAAA,QAAS,KAAK,KAAI;wDAChC,WAAU;wDACV,aAAY;;;;;;;;;;;;0DAIhB,6LAAC;;kEACC,6LAAC;wDACC,SAAQ;wDACR,WAAU;kEACX;;;;;;kEAGD,6LAAC;wDACC,MAAK;wDACL,MAAK;wDACL,IAAG;wDACH,KAAI;wDACJ,QAAQ;wDACR,cAAc,CAAA,oBAAA,8BAAA,QAAS,QAAQ,KAAI;wDACnC,WAAU;wDACV,aAAY;;;;;;;;;;;;0DAIhB,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDACC,MAAK;wDACL,SAAS;wDACT,WAAU;kEACX;;;;;;kEAGD,6LAAC;wDACC,MAAK;wDACL,WAAU;kEAET,YAAY,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW9C;KA1JwB","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/clayc/Desktop/Gordon%20College/3rd%20Year/Project%20Management/sari-sari-store-inventory-management/src/components/SaleModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Fragment, useState } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { Product } from \"@/types/product\";\r\n\r\ninterface SaleModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  products: Product[];\r\n  onRecordSale: (productId: string, quantity: number) => void;\r\n}\r\n\r\nexport default function SaleModal({\r\n  isOpen,\r\n  onClose,\r\n  products,\r\n  onRecordSale,\r\n}: SaleModalProps) {\r\n  const [selectedProductId, setSelectedProductId] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const selectedProduct = products.find((p) => p.id === selectedProductId);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedProductId || quantity < 1) return;\r\n\r\n    onRecordSale(selectedProductId, quantity);\r\n    setSelectedProductId(\"\");\r\n    setQuantity(1);\r\n    onClose();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedProductId(\"\");\r\n    setQuantity(1);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Transition appear show={isOpen} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-10\" onClose={handleClose}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black/50\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-xl font-medium leading-6 text-gray-900\"\r\n                >\r\n                  Record Sale\r\n                </Dialog.Title>\r\n\r\n                <form onSubmit={handleSubmit} className=\"mt-4 space-y-4\">\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"product\"\r\n                      className=\"block text-lg font-medium text-gray-700\"\r\n                    >\r\n                      Product\r\n                    </label>\r\n                    <select\r\n                      id=\"product\"\r\n                      value={selectedProductId}\r\n                      onChange={(e) => setSelectedProductId(e.target.value)}\r\n                      className=\"mt-1 p-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 text-md\"\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select a product</option>\r\n                      {products.map((product) => (\r\n                        <option\r\n                          key={product.id}\r\n                          value={product.id}\r\n                          disabled={product.quantity === 0}\r\n                        >\r\n                          {product.name} - â‚±{product.price.toFixed(2)}{\" \"}\r\n                          {product.quantity === 0\r\n                            ? \"(Out of Stock)\"\r\n                            : `(${product.quantity} available)`}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  {selectedProduct && (\r\n                    <div className=\"bg-gray-50 p-3 rounded-md\">\r\n                      <p className=\"text-md text-gray-600\">\r\n                        Available:{\" \"}\r\n                        <span className=\"font-medium\">\r\n                          {selectedProduct.quantity}\r\n                        </span>\r\n                      </p>\r\n                      <p className=\"text-md text-gray-600\">\r\n                        Price:{\" \"}\r\n                        <span className=\"font-medium\">\r\n                          â‚±{selectedProduct.price.toFixed(2)}\r\n                        </span>\r\n                      </p>\r\n                      {selectedProduct.quantity > 0 && (\r\n                        <p className=\"text-md text-green-600 font-medium\">\r\n                          Total:{\" \"}\r\n                          <span className=\"font-bold\">\r\n                            â‚±{(selectedProduct.price * quantity).toFixed(2)}\r\n                          </span>\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"quantity\"\r\n                      className=\"block text-lg font-medium text-gray-700\"\r\n                    >\r\n                      Quantity\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"quantity\"\r\n                      min=\"1\"\r\n                      max={selectedProduct?.quantity || 1}\r\n                      value={quantity}\r\n                      onChange={(e) =>\r\n                        setQuantity(parseInt(e.target.value) || 1)\r\n                      }\r\n                      className=\"mt-1 p-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 text-md\"\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mt-6 flex justify-end space-x-3\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={handleClose}\r\n                      className=\"inline-flex justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-md font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={\r\n                        !selectedProductId ||\r\n                        quantity < 1 ||\r\n                        (selectedProduct && quantity > selectedProduct.quantity)\r\n                      }\r\n                      className=\"inline-flex justify-center rounded-md border border-transparent bg-green-600 px-4 py-2 text-md font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                      Record Sale\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/clayc/Desktop/Gordon%20College/3rd%20Year/Project%20Management/sari-sari-store-inventory-management/src/lib/database.ts"],"sourcesContent":["import { supabase } from \"./supabase\";\r\nimport { Product, ProductFormData } from \"@/types/product\";\r\n\r\nexport const productService = {\r\n  async getProducts(): Promise<Product[]> {\r\n    const { data, error } = await supabase\r\n      .from(\"products\")\r\n      .select(\"*\")\r\n      .order(\"created_at\", { ascending: false });\r\n\r\n    if (error) throw error;\r\n    return data || [];\r\n  },\r\n\r\n  async createProduct(productData: ProductFormData): Promise<Product> {\r\n    const { data: userData } = await supabase.auth.getUser();\r\n    if (!userData.user) throw new Error(\"User not authenticated\");\r\n\r\n    const { data, error } = await supabase\r\n      .from(\"products\")\r\n      .insert({\r\n        ...productData,\r\n        daily_sales: 0, // Initialize daily_sales to 0\r\n        user_id: userData.user.id,\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  async updateProduct(\r\n    id: string,\r\n    productData: Partial<ProductFormData>\r\n  ): Promise<Product> {\r\n    const { data, error } = await supabase\r\n      .from(\"products\")\r\n      .update({\r\n        ...productData,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .eq(\"id\", id)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  async updateDailySales(\r\n    productId: string,\r\n    salesAmount: number\r\n  ): Promise<Product> {\r\n    const { data, error } = await supabase\r\n      .from(\"products\")\r\n      .update({\r\n        daily_sales: salesAmount,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .eq(\"id\", productId)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  async incrementDailySales(\r\n    productId: string,\r\n    amount: number\r\n  ): Promise<Product> {\r\n    // First get the current daily_sales\r\n    const { data: currentProduct } = await supabase\r\n      .from(\"products\")\r\n      .select(\"daily_sales\")\r\n      .eq(\"id\", productId)\r\n      .single();\r\n\r\n    if (!currentProduct) throw new Error(\"Product not found\");\r\n\r\n    const newDailySales = (currentProduct.daily_sales || 0) + amount;\r\n\r\n    const { data, error } = await supabase\r\n      .from(\"products\")\r\n      .update({\r\n        daily_sales: newDailySales,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .eq(\"id\", productId)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  async resetAllDailySales(): Promise<void> {\r\n    const { data: userData } = await supabase.auth.getUser();\r\n    if (!userData.user) throw new Error(\"User not authenticated\");\r\n\r\n    const { error } = await supabase\r\n      .from(\"products\")\r\n      .update({ daily_sales: 0 })\r\n      .eq(\"user_id\", userData.user.id);\r\n\r\n    if (error) throw error;\r\n  },\r\n\r\n  async getTodayTotalSales(): Promise<number> {\r\n    const { data: userData } = await supabase.auth.getUser();\r\n    if (!userData.user) throw new Error(\"User not authenticated\");\r\n\r\n    const { data, error } = await supabase\r\n      .from(\"products\")\r\n      .select(\"daily_sales\")\r\n      .eq(\"user_id\", userData.user.id);\r\n\r\n    if (error) throw error;\r\n\r\n    return data.reduce(\r\n      (total, product) => total + (product.daily_sales || 0),\r\n      0\r\n    );\r\n  },\r\n\r\n  async deleteProduct(id: string): Promise<void> {\r\n    const { error } = await supabase.from(\"products\").delete().eq(\"id\", id);\r\n\r\n    if (error) throw error;\r\n  },\r\n};\r\n\r\n// NEW: Proper sales service that records individual sales transactions\r\nexport const salesService = {\r\n  // Record a sale and update product quantities\r\n  async recordSale(productId: string, quantity: number): Promise<void> {\r\n    const { data: userData } = await supabase.auth.getUser();\r\n    if (!userData.user) throw new Error(\"User not authenticated\");\r\n\r\n    // Get product details\r\n    const { data: product, error: productError } = await supabase\r\n      .from(\"products\")\r\n      .select(\"*\")\r\n      .eq(\"id\", productId)\r\n      .single();\r\n\r\n    if (productError || !product) throw new Error(\"Product not found\");\r\n\r\n    // Check stock availability\r\n    if (product.quantity < quantity) {\r\n      throw new Error(\r\n        `Insufficient stock. Only ${product.quantity} items available.`\r\n      );\r\n    }\r\n\r\n    const totalAmount = product.price * quantity;\r\n\r\n    try {\r\n      // 1. Record the sale in sales table\r\n      const { error: saleError } = await supabase.from(\"sales\").insert({\r\n        product_id: productId,\r\n        product_name: product.name,\r\n        quantity_sold: quantity,\r\n        unit_price: product.price,\r\n        total_amount: totalAmount,\r\n        user_id: userData.user.id,\r\n      });\r\n\r\n      if (saleError) throw saleError;\r\n\r\n      // 2. Update product quantity and daily sales\r\n      const newQuantity = product.quantity - quantity;\r\n      const newDailySales = (product.daily_sales || 0) + totalAmount;\r\n\r\n      const { error: updateError } = await supabase\r\n        .from(\"products\")\r\n        .update({\r\n          quantity: newQuantity,\r\n          daily_sales: newDailySales,\r\n          updated_at: new Date().toISOString(),\r\n        })\r\n        .eq(\"id\", productId);\r\n\r\n      if (updateError) throw updateError;\r\n    } catch (error) {\r\n      console.error(\"Error in sales transaction:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get sales history\r\n  async getSalesHistory(limit = 50, offset = 0): Promise<any[]> {\r\n    const { data: userData } = await supabase.auth.getUser();\r\n    if (!userData.user) throw new Error(\"User not authenticated\");\r\n\r\n    const { data, error } = await supabase\r\n      .from(\"sales\")\r\n      .select(\"*\")\r\n      .eq(\"user_id\", userData.user.id)\r\n      .order(\"sale_date\", { ascending: false })\r\n      .order(\"created_at\", { ascending: false })\r\n      .range(offset, offset + limit - 1);\r\n\r\n    if (error) throw error;\r\n\r\n    return data.map((sale) => ({\r\n      id: sale.id,\r\n      date: sale.sale_date,\r\n      product_name: sale.product_name,\r\n      quantity_sold: sale.quantity_sold,\r\n      total_amount: sale.total_amount,\r\n      unit_price: sale.unit_price,\r\n    }));\r\n  },\r\n\r\n  // Search sales by product name or date\r\n  async searchSales(query: string): Promise<any[]> {\r\n    const { data: userData } = await supabase.auth.getUser();\r\n    if (!userData.user) throw new Error(\"User not authenticated\");\r\n\r\n    const { data, error } = await supabase\r\n      .from(\"sales\")\r\n      .select(\"*\")\r\n      .eq(\"user_id\", userData.user.id)\r\n      .or(`product_name.ilike.%${query}%,sale_date.ilike.%${query}%`)\r\n      .order(\"sale_date\", { ascending: false })\r\n      .order(\"created_at\", { ascending: false });\r\n\r\n    if (error) throw error;\r\n\r\n    return data.map((sale) => ({\r\n      id: sale.id,\r\n      date: sale.sale_date,\r\n      product_name: sale.product_name,\r\n      quantity_sold: sale.quantity_sold,\r\n      total_amount: sale.total_amount,\r\n      unit_price: sale.unit_price,\r\n    }));\r\n  },\r\n\r\n  // Get total count for pagination\r\n  async getSalesCount(): Promise<number> {\r\n    const { data: userData } = await supabase.auth.getUser();\r\n    if (!userData.user) throw new Error(\"User not authenticated\");\r\n\r\n    const { count, error } = await supabase\r\n      .from(\"sales\")\r\n      .select(\"*\", { count: \"exact\", head: true })\r\n      .eq(\"user_id\", userData.user.id);\r\n\r\n    if (error) throw error;\r\n    return count || 0;\r\n  },\r\n\r\n  // Get today's total sales from sales table\r\n  async getTodaySales(): Promise<number> {\r\n    const { data: userData } = await supabase.auth.getUser();\r\n    if (!userData.user) throw new Error(\"User not authenticated\");\r\n\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n\r\n    const { data, error } = await supabase\r\n      .from(\"sales\")\r\n      .select(\"total_amount\")\r\n      .eq(\"user_id\", userData.user.id)\r\n      .eq(\"sale_date\", today);\r\n\r\n    if (error) throw error;\r\n\r\n    return data.reduce((sum, sale) => sum + sale.total_amount, 0);\r\n  },\r\n};\r\n\r\n// REMOVE or COMMENT OUT the old salesHistoryService since we're replacing it\r\n/*\r\nexport const salesHistoryService = {\r\n  // ... your old salesHistoryService code ...\r\n};\r\n*/\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 795, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/clayc/Desktop/Gordon%20College/3rd%20Year/Project%20Management/sari-sari-store-inventory-management/src/app/pages/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport ProductModal from \"@/components/ProductModal\";\r\nimport SaleModal from \"@/components/SaleModal\";\r\nimport { Product, ProductFormData } from \"@/types/product\";\r\nimport { productService, salesService } from \"@/lib/database\";\r\n\r\nexport default function Dashboard() {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState<\"name\" | \"quantity\" | \"price\">(\"name\");\r\n  const [isProductModalOpen, setIsProductModalOpen] = useState(false);\r\n  const [isSaleModalOpen, setIsSaleModalOpen] = useState(false);\r\n  const [editingProduct, setEditingProduct] = useState<Product | null>(null);\r\n  const [todaySales, setTodaySales] = useState<number>(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [salesLoading, setSalesLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadProducts();\r\n    loadTodaySales();\r\n  }, []);\r\n\r\n  const loadProducts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const productsData = await productService.getProducts();\r\n      setProducts(productsData);\r\n    } catch (error) {\r\n      console.error(\"Error loading products:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadTodaySales = async () => {\r\n    try {\r\n      setSalesLoading(true);\r\n      // Try to get sales from sales table first (more accurate)\r\n      const salesTotal = await salesService.getTodaySales();\r\n      setTodaySales(salesTotal);\r\n    } catch (error) {\r\n      console.error(\"Error loading today sales from sales table:\", error);\r\n      // Fallback to productService method\r\n      try {\r\n        const fallbackTotal = await productService.getTodayTotalSales();\r\n        setTodaySales(fallbackTotal);\r\n      } catch (fallbackError) {\r\n        console.error(\"Error loading fallback sales:\", fallbackError);\r\n        setTodaySales(0);\r\n      }\r\n    } finally {\r\n      setSalesLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRecordSale = async (productId: string, quantity: number) => {\r\n    try {\r\n      const product = products.find((p) => p.id === productId);\r\n      if (!product) throw new Error(\"Product not found\");\r\n\r\n      // Use the new sales service that records to sales table\r\n      await salesService.recordSale(productId, quantity);\r\n\r\n      // Reload data to reflect changes\r\n      await loadProducts();\r\n      await loadTodaySales();\r\n\r\n      alert(\r\n        `Sale recorded successfully! â‚±${(quantity * product.price).toFixed(\r\n          2\r\n        )} added to today's sales.`\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error recording sale:\", error);\r\n      alert(error instanceof Error ? error.message : \"Failed to record sale\");\r\n    }\r\n  };\r\n\r\n  const handleCreateProduct = async (data: ProductFormData) => {\r\n    try {\r\n      await productService.createProduct(data);\r\n      await loadProducts();\r\n      setIsProductModalOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Error creating product:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateProduct = async (data: ProductFormData) => {\r\n    if (!editingProduct) return;\r\n\r\n    try {\r\n      await productService.updateProduct(editingProduct.id, data);\r\n      await loadProducts();\r\n      setIsProductModalOpen(false);\r\n      setEditingProduct(null);\r\n    } catch (error) {\r\n      console.error(\"Error updating product:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = async (id: string) => {\r\n    if (confirm(\"Are you sure you want to delete this product?\")) {\r\n      try {\r\n        await productService.deleteProduct(id);\r\n        await loadProducts();\r\n        await loadTodaySales(); // Reload sales total in case this product had sales\r\n      } catch (error) {\r\n        console.error(\"Error deleting product:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleResetDailySales = async () => {\r\n    if (\r\n      confirm(\r\n        \"Are you sure you want to reset today's sales? This cannot be undone.\"\r\n      )\r\n    ) {\r\n      try {\r\n        await productService.resetAllDailySales();\r\n        await loadProducts();\r\n        await loadTodaySales();\r\n        alert(\"Daily sales reset successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error resetting daily sales:\", error);\r\n        alert(\"Failed to reset daily sales\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const openEditModal = (product: Product) => {\r\n    setEditingProduct(product);\r\n    setIsProductModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsProductModalOpen(false);\r\n    setEditingProduct(null);\r\n  };\r\n\r\n  const filteredAndSortedProducts = products\r\n    .filter(\r\n      (product) =>\r\n        product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        product.supplier.toLowerCase().includes(searchTerm.toLowerCase())\r\n    )\r\n    .sort((a, b) => {\r\n      if (sortBy === \"name\") return a.name.localeCompare(b.name);\r\n      if (sortBy === \"quantity\") return a.quantity - b.quantity;\r\n      return a.price - b.price;\r\n    });\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Sales Summary Card */}\r\n      <div className=\"bg-green-600 rounded-lg shadow-sm p-6 text-white\">\r\n        <div className=\"flex justify-between items-start\">\r\n          <div>\r\n            <p className=\"text-3xl font-bold\">\r\n              {salesLoading\r\n                ? \"Loading...\"\r\n                : `â‚± ${todaySales.toLocaleString(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2,\r\n                  })}`}\r\n            </p>\r\n            <p className=\"text-green-100\">Today's Total Sales</p>\r\n          </div>\r\n          <button\r\n            onClick={handleResetDailySales}\r\n            className=\"bg-green-700 hover:bg-green-800 text-white px-3 py-1 rounded text-sm transition-colors\"\r\n            title=\"Reset daily sales\"\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"bg-white flex place-content-end rounded-lg shadow-sm p-6 \">\r\n        <div className=\"flex flex-col sm:flex-row gap-4\">\r\n          <button\r\n            onClick={() => setIsProductModalOpen(true)}\r\n            className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-md font-medium transition-colors shadow-sm\"\r\n          >\r\n            Add New Product\r\n          </button>\r\n          <button\r\n            onClick={() => setIsSaleModalOpen(true)}\r\n            className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-md font-medium transition-colors shadow-sm\"\r\n          >\r\n            Record Sale\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search and Controls */}\r\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n        <div className=\"flex flex-col md:flex-row gap-4 items-center justify-between mb-6\">\r\n          {/* Search Input */}\r\n          <div className=\"w-full md:w-1/3\">\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <SearchIcon className=\"h-5 w-5 text-gray-400\" />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search products\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-green-500 focus:border-green-500 sm:text-sm\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sort Options */}\r\n          <div className=\"w-full md:w-1/3\">\r\n            <div className=\"flex bg-gray-100 rounded-lg p-1\">\r\n              {([\"name\", \"quantity\", \"price\"] as const).map((option) => (\r\n                <button\r\n                  key={option}\r\n                  onClick={() => setSortBy(option)}\r\n                  className={`flex-1 py-2 px-3 text-sm font-medium rounded-md transition-colors ${\r\n                    sortBy === option\r\n                      ? \"bg-white text-gray-900 shadow-sm\"\r\n                      : \"text-gray-600 hover:text-gray-900\"\r\n                  }`}\r\n                >\r\n                  {option.charAt(0).toUpperCase() + option.slice(1)}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Products List */}\r\n        <div className=\"mt-6 space-y-4\">\r\n          {loading ? (\r\n            <div className=\"text-center py-8\">\r\n              <p className=\"text-gray-500\">Loading products...</p>\r\n            </div>\r\n          ) : filteredAndSortedProducts.length === 0 ? (\r\n            <div className=\"text-center py-8\">\r\n              <p className=\"text-gray-500\">\r\n                {searchTerm\r\n                  ? \"No products found matching your search.\"\r\n                  : \"No products added yet.\"}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            filteredAndSortedProducts.map((product) => (\r\n              <div\r\n                key={product.id}\r\n                className={`flex flex-col sm:flex-row sm:items-center justify-between p-4 bg-white rounded-lg border-l-4 ${\r\n                  product.quantity <= 5\r\n                    ? \"border-red-500 bg-red-50\"\r\n                    : \"border-transparent shadow-sm hover:shadow-md transition-shadow\"\r\n                }`}\r\n              >\r\n                <div className=\"flex-1 mb-3 sm:mb-0\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                    {product.name}\r\n                  </h3>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    Supplier: {product.supplier}\r\n                  </p>\r\n                  <p className=\"text-sm text-green-600 font-medium\">\r\n                    Today's Sales: â‚±{(product.daily_sales || 0).toFixed(2)}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"flex items-center gap-6 text-center\">\r\n                  <div className=\"w-20\">\r\n                    <p className=\"text-sm text-gray-600\">Price</p>\r\n                    <p className=\"font-medium text-gray-900\">\r\n                      â‚± {product.price.toFixed(2)}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"w-20\">\r\n                    <p className=\"text-sm text-gray-600\">Stock</p>\r\n                    <p\r\n                      className={`font-medium ${\r\n                        product.quantity <= 5 ? \"text-red-600\" : \"text-gray-900\"\r\n                      }`}\r\n                    >\r\n                      {product.quantity}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex items-center gap-2 mt-3 sm:mt-0 sm:ml-4\">\r\n                  <button\r\n                    onClick={() => handleRecordSale(product.id, 1)}\r\n                    disabled={product.quantity === 0}\r\n                    className=\"p-2 text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded-full transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    title=\"Sell 1 item\"\r\n                  >\r\n                    <SellIcon className=\"h-5 w-5\" />\r\n                  </button>\r\n                  <button\r\n                    onClick={() => openEditModal(product)}\r\n                    className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-full transition-colors\"\r\n                  >\r\n                    <EditIcon className=\"h-5 w-5\" />\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDeleteProduct(product.id)}\r\n                    className=\"p-2 text-gray-500 hover:text-red-600 hover:bg-gray-100 rounded-full transition-colors\"\r\n                  >\r\n                    <DeleteIcon className=\"h-5 w-5\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Product Modal */}\r\n      <ProductModal\r\n        isOpen={isProductModalOpen}\r\n        onClose={closeModal}\r\n        onSubmit={editingProduct ? handleUpdateProduct : handleCreateProduct}\r\n        product={editingProduct}\r\n        isEditing={!!editingProduct}\r\n      />\r\n\r\n      {/* Sale Modal */}\r\n      <SaleModal\r\n        isOpen={isSaleModalOpen}\r\n        onClose={() => setIsSaleModalOpen(false)}\r\n        products={products}\r\n        onRecordSale={handleRecordSale}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// Icon Components\r\nfunction SearchIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nfunction SellIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5.5M7 13l2.5 5.5m5.5-5.5h5.5m-5.5 0V19a2 2 0 104 0v-1.5\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nfunction EditIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nfunction DeleteIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}